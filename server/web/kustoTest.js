const kustoExecutor = require('./kustoExecutor.js').KustoExecutor;
const queryConf = require('./conf.js').conf;

var ex = new kustoExecutor();
var start = Date.now();

ex.on("data", function(result) { 
    console.log("Time taken " + (Date.now() - start)); 
    start = Date.now(); 
    console.log(JSON.stringify(result, null, 2)); 
});
ex.on("end", function() { console.log("Completed"); });

//console.log(JSON.stringify(queryConf));

//ex.execute(JSON.stringify(queryConf), process.argv[2], process.argv[3], process.argv[4], process.argv[5], process.argv[6], process.argv[7] == "true", process.argv[8] == "true");
// if (process.argv[2].endsWith(".js")) {
//     const queryConf = require(process.argv[2]).conf;
//     ex.execute(JSON.stringify(queryConf), process.argv[3], process.argv[4], process.argv[5], process.argv[6], process.argv[7], process.argv[8] == "true", process.argv[9] == "true");
// }
// else {
//     ex.execute(process.argv[2], process.argv[3], process.argv[4], process.argv[5], process.argv[6], process.argv[7], process.argv[8] == "true", process.argv[9] == "true");
// }

//ex.execute(process.argv[2], process.argv[3], process.argv[4], process.argv[5], process.argv[6], process.argv[7], process.argv[8] == "true", process.argv[9] == "true");

//ex.execute('{\"Databases\":{\"file\":{\"Name\":\"file\",\"Functions\":{},\"Tables\":{\"StormEvents\":{\"Name\":\"StormEvents\",\"Type\":\"file\",\"Handle\":\"/Users/prasad/Work/Grafana/plugin/wisdomGit/Bolt/kusto/web/test/data/index.txt\",\"OrderedColumns\":[{\"Name\":\"StartTime\",\"Type\":\"System.DateTime\",\"CslType\":\"datetime\"},{\"Name\":\"EpisodeNarrative\",\"Type\":\"System.String\",\"CslType\":\"string\"},{\"Name\":\"State\",\"Type\":\"System.String\",\"CslType\":\"string\"}]}}}}}',
//ex.execute('{"Databases":{"sonicwall":{"Name":"sonicwall","Functions":{},"Tables":{"index":{"Name":"index","Type":"file","Handle":"/Users/prasad/Downloads/3m.log","OrderedColumns":[{"Name":"line","Type":"System.String","CslType":"string"}]},"aggregate":{"Name":"aggregate","Type":"file","Handle":"localhost#8983#aggregate#","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"sent_mb","Type":"System.Real","CslType":"real"},{"Name":"rcvd_mb","Type":"System.Real","CslType":"real"}]},"stream":{"Name":"stream","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"lan_wan_traffic":{"Name":"lan_wan_traffic","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"bolt_inf_Sent_Rcvd_MB","groupId":"","numPartitions":8,"processingBatchSize":1,"avroSpec":{"type":"record","name":"ContentArray","fields":[{"name":"contents","type":{"type":"array","items":{"type":"record","name":"AnomalyResults","fields":[{"name":"partition_fields","type":{"type":"array","items":"string"}},{"name":"aggr_field","type":"string"},{"name":"jobId","type":"string"},{"name":"id","type":"string"},{"name":"timestamp","type":"string"},{"name":"actual_value","type":"float"},{"name":"expected_value","type":"float"},{"name":"is_anomaly","type":"boolean"},{"name":"score_value","type":"float"},{"name":"method","type":"string"},{"name":"Severity","type":"string"},{"name":"alerts_severity","type":"string"},{"name":"forecasted_values_fs","type":{"type":"array","items":"float"}}]}}}]},"avroField":"contents"},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"aggr_field","Type":"System.String","CslType":"string"},{"Name":"actual_value","Type":"System.Real","CslType":"real"},{"Name":"expected_value","Type":"System.Real","CslType":"real"},{"Name":"score_value","Type":"System.Real","CslType":"real"},{"Name":"Severity","Type":"System.String","CslType":"string"}]}}},"sonicwall_ingest":{"Name":"sonicwall_ingest","Functions":{},"Tables":{"index":{"Name":"index","Type":"shardedsolr","Handle":"localhost#8983#sonicwall#6","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"aggregate":{"Name":"aggregate","Type":"shardedsolr","Handle":"localhost#8983#aggregate#","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"sent_mb","Type":"System.Real","CslType":"real"},{"Name":"rcvd_mb","Type":"System.Real","CslType":"real"}]},"stream":{"Name":"stream","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"solringest","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"stream_lan_wan":{"Name":"stream_lan_wan","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"lan_wan","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]}}}}}',
ex.execute('{"Databases":{"sonicwall":{"Name":"sonicwall","Functions":{},"Tables":{"index":{"Name":"index","Type":"file","Handle":"/Users/prasad/Work/Grafana/plugin/wisdomGit/Bolt/kusto/web/test/data/index.txt","OrderedColumns":[{"Name":"line","Type":"System.String","CslType":"string"}]},"aggregate":{"Name":"aggregate","Type":"file","Handle":"localhost#8983#aggregate#","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"sent_mb","Type":"System.Real","CslType":"real"},{"Name":"rcvd_mb","Type":"System.Real","CslType":"real"}]},"stream":{"Name":"stream","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"lan_wan_traffic":{"Name":"lan_wan_traffic","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"bolt_inf_Sent_Rcvd_MB","groupId":"","numPartitions":8,"processingBatchSize":1,"avroSpec":{"type":"record","name":"ContentArray","fields":[{"name":"contents","type":{"type":"array","items":{"type":"record","name":"AnomalyResults","fields":[{"name":"partition_fields","type":{"type":"array","items":"string"}},{"name":"aggr_field","type":"string"},{"name":"jobId","type":"string"},{"name":"id","type":"string"},{"name":"timestamp","type":"string"},{"name":"actual_value","type":"float"},{"name":"expected_value","type":"float"},{"name":"is_anomaly","type":"boolean"},{"name":"score_value","type":"float"},{"name":"method","type":"string"},{"name":"Severity","type":"string"},{"name":"alerts_severity","type":"string"},{"name":"forecasted_values_fs","type":{"type":"array","items":"float"}}]}}}]},"avroField":"contents"},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"aggr_field","Type":"System.String","CslType":"string"},{"Name":"actual_value","Type":"System.Real","CslType":"real"},{"Name":"expected_value","Type":"System.Real","CslType":"real"},{"Name":"score_value","Type":"System.Real","CslType":"real"},{"Name":"Severity","Type":"System.String","CslType":"string"}]}}},"sonicwall_ingest":{"Name":"sonicwall_ingest","Functions":{},"Tables":{"index":{"Name":"index","Type":"shardedsolr","Handle":"localhost#8983#sonicwall#6","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"aggregate":{"Name":"aggregate","Type":"shardedsolr","Handle":"localhost#8983#aggregate#","OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"sent_mb","Type":"System.Real","CslType":"real"},{"Name":"rcvd_mb","Type":"System.Real","CslType":"real"}]},"stream":{"Name":"stream","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"solringest","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]},"stream_lan_wan":{"Name":"stream_lan_wan","Type":"kafka","Handle":{"kafkaUrl":"bolt-node:9092","topic":"syslogingest2","groupId":"lan_wan","numPartitions":8},"OrderedColumns":[{"Name":"timestamp","Type":"System.DateTime","CslType":"datetime"},{"Name":"message","Type":"System.String","CslType":"string"}]}}}}}',
//"file",
"sonicwall", 
//"search in (StormEvents) | | where EpisodeNarrative contains 'Unusually' |project EpisodeNarrative, StartTime | summarize dns_requests=count() by fivemin=floor(timestamp, 5m)", 
//"search in (StormEvents) | where EpisodeNarrative contains 'Unusually' |project EpisodeNarrative, StartTime | summarize count=count() by fivemin=floor(timestamp, 5m)",
//"search in (index) 'line:\"Connection\"' | extend sent_rcvd=extract_all(@'sent=(\d+).+rcvd=(\d+)', line) | project sent_rcvd" ,
//"index | project message = extract_all(@'^\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+\\s+[\\w\\.]+\\s+(.+)', line) | project pairs = extract_all(@'([^ =]+)=(([^ \"]+)|(\"[^\"]+\"))', dynamic([1, 2]), message[0]) | mv-apply pairs on (summarize bag=make_bag(pack(tostring(pairs[0]), replace('\"', '', pairs[1]))))  | evaluate bag_unpack(bag) | extend ['time']=tostring(todatetime(['time'])) | project-rename fw_id=id",
//"index | project line | limit 2",
"index | project message = extract_all(@'^\\w+\\s+\\d+\\s+\\d+:\\d+:\\d+\\s+[\\w\\.]+\\s+(.+)', line) | project pairs = extract_all(@'([^ =]+)=(([^ \"]+)|(\"[^\"]+\"))', dynamic([1, 2]), message[0]) | mv-apply pairs on (summarize bag=make_bag(pack(tostring(pairs[0]), replace('\"', '', pairs[1])))) | evaluate bag_unpack(bag) | extend ['time']=tostring(todatetime(['time'])) | project-rename fw_id=id, message=msg | limit 2 ",
"dummy", 
"2021-01-01T00:00:00Z", 
"2021-02-15T00:00:00Z"
);

// extend temp=extract_all(@"appName=\'([^\']+)\'", dynamic([1]), message)
// "StormEvents | extend hour = floor(StartTime % 1d , 1h) | summarize event_count=count() by fivemin=floor(StartTime, 5m)"
// "StormEvents | extend temp=extract_all(@\"(Unusually wet conditions)\", dynamic([1]), EpisodeNarrative) | project temp"